% equalPlot_max('inFile.txt',scale_max)
%
% equalPlot generates ratemaps, plots them and store them to images.
% Multiple session will be read and the maximum rate for a cell will be
% used for plotting in all sessions.
%
% The input file must be on the following format.
%
% C:\Data\TTList.txt
% C:\Data\Begin 1
% C:\Data\Begin 2
% C:\Data\Begin 3
% C:\Data\Begin 4
% and so on ...
%
% The first line specifie the directory to the first session and also the
% name on the t-file list that will be used for all the sessions listed. 
% The t-file list must contain the Mclust t-files, one name for each file. 
% If the list contain cells that only occure in some of the sessions, these
% cells will be plotted as having zero firing rate when missing. Placefield
% images will be stored to both bmp and eps imagefiles to a subdirectory in
% the data folder called placeFieldImages.

function [peakRate, pathCoord] = readHeader(inFile)

D = 100; % Circle diameter in cm
%bins = 60; % Number of bins (roughly 3.5 cm)
%scale = 0.26;% Conversion from pixels to cm, frame is 640 by 480 (?)
%scale = 0.5;% Conversion from pixels to cm, frame is 640 by 480 (?)
img_text = 'on';

fid = fopen(inFile,'r');
if fid == -1
    msgbox('Could not open the input file! Make sure the filname and path are correct.','ERROR');
end

% Get sessions and csc-file list from input file
fid = fopen(inFile,'r');
ii = -1;     
numsessions = 0;
while ~feof(fid)
    str = fgetl(fid);
    if ii == -1
        ttList = str;
    elseif ii == 0
        cscList = str;
    elseif ii == 1
        refList = str;
        elseif ii == 2
        ch4avg = str;
    elseif ii > 2
        numsessions  = numsessions+1;
        if ~strcmp(str(end),'\')
            str = strcat(str,'\');
        end
        sessions(numsessions) = {str};        
    end
    ii = ii+1;
end    
counter = numsessions;  

% read the file names from the t-file list
F = ReadFileList(ttList);
% Number of cells/files in the list
numCells = length(F);

% Set the field selection for reading the video files. 1 = Add parameter, 0 = skip
% parameter
fieldSelection(1) = 1; % Timestamps
fieldSelection(2) = 1; % Extracted X
fieldSelection(3) = 1; % Extracted Y
fieldSelection(4) = 1; % Extracted Angle
fieldSelection(5) = 1; % Targets
% Do we return header 1 = Yes, 0 = No.
extractHeader = 1;
% 5 different extraction modes, see help file for Nlx2MatVt
extractMode = 1; % Extract all data

% Read the input data
%binWidth = pi*D/bins;
pathCoord = cell(counter,4);
spk_phase = cell(counter,numCells);
ts = cell(counter,numCells);
map = cell(counter,numCells);
field_id = cell(counter,numCells);
phase = cell(counter,1);
t = cell(counter,1);
vel = cell(counter,1);

for ii = 1:counter
    disp(sprintf('%s%s','Reading data for session: ',sessions{ii}));
    % Load data from the cut files generated by Mclust
    disp('Start calculating the ratemaps for the cells');
    for jj=1:numCells
        disp(sprintf('%s%i',' Cell ',jj));
        fid = fopen(sprintf('%s%s',sessions{ii},F{jj}(1:end-4),'.ntt'),'r');
        if fid >= 0
            [Timestamps, ScNumbers, CellNumbers, Features, Samples, Header] = Nlx2MatSpike(sprintf('%s%s',sessions{ii},F{jj}(1:end-4),'.ntt'),fieldSelection,1, 1, 1);
        else
            [Timestamps, ScNumbers, CellNumbers, Features, Samples, Header] = Nlx2MatSpike(sprintf('%s%s',sessions{ii},F{jj}(1:end-5),'.ntt'),fieldSelection,1, 1, 1);
        end
        Header
        pause()
    end
end