%% The preceding example showed how the filter for a simple cell could be recovered
%% using RTA. Let's now consider a complex cell. We will use both the even and odd
%% Gabor filters generated by make3dgabor. The sum of the squared responses of each
%% filter corresponds to the energy model of a complex cell. We then create a
%% delay, rectify and threshhold as before to create a simulated complex cell response.


%% make sure strflab functions are in matlab path, in case they aren't already
strflabDir = get_function_dir('strflab_tutorial_2_RTC_with_noise');
if isempty(strflabDir)
    error('Cannot find strflab directory!');
end
addpath(genpath(strflabDir))

global globDat

%% First we make Gaussian random noise stimuli
rawStim = randn([10 10 15000]);
rawStim = reshape(rawStim, [100 15000]);

%% Create a model complex cell
gparams = [.5 .5 0 5.5 0 .0909 .3 0]';
[gabor, gabor90] = make3dgabor([10 10 5], gparams);
gabor = reshape(gabor, [10*10 5]);
gabor90 = reshape(gabor90, [10*10 5]);
resp = dotdelay(gabor, rawStim);
resp90 = dotdelay(gabor90, rawStim);
resp = sqrt(resp.^2 + resp90.^2);
resp = [zeros([4 1]); resp(1:end-4)];
resp(resp<4) = 0;
resp(resp>=4) = 1;

%% To model a complex cell we turn on RTC in addition to RTA
params.RTAC = [1 1];

%% In order to constrain the model to a reasonable number of parameters
%% (unlike standard RTC) we can consider only local pairwise statistics.
%% The locality parameter determines how many pixels away from each pixel to
%% include pairwise statistics for. Setting it to 1 includes the pair-wise
%% terms for all pixels directly touching each other. Setting it to 2 includes 
%% pair-wise terms for pixels separated by one pixel, and so on. This parameter 
%% is in effect a regularization parameter; ie it can prevents over fitting of
%% unimportant parameters to noise in the data by removing those parameters from
%% the model.
params.locality = 1;

%% Make sure rawStim is the proper size before sending to preprocessing
rawStim = reshape(rawStim, [10 10 15000]);

%% The preprocessing routine is now going to return the raw stimulus, to
%% compute the RTA, and a limited portion (determined by the locality 
%% paramter) of the covariance matrix of the stimulus, to compute the RTC,
%% all formatted for STRFlab
[stim,params] = preprocRTAC(rawStim, params);
strfData(stim,resp)

%% Create new strf
strf = linInit(size(stim,2), [0:8]);
strf.b1 = mean(resp);
strf.params = params;

options=trnSCG;
options.display=-5;
options.maxIter = 100;

%% Train and visualize the model
trainingIdx = [1:globDat.nSample];
strfTrained=strfOpt(strf,trainingIdx,options);
preprocRTAC_vis(strfTrained);

%% The first row shows the RTA estimate across the specified delays. The second 
%% row shows the first principle component of the spike triggered covariance
%% matrix at each of the delays, and the third row shows the 2nd principle
%% component at each delay. Because the model cell is nonlinear and the stimulus
%% pixels are uncorrelated, the RTA estimate is just noise. The first principle
%% components of the RTC matrix around the peak delay, however, recover the filter
%% relatively well. Note that the sign of the recovered filters is arbitrary, since
%% they describe a vector direction in simulus space that accounts for response 
%% variance.

%% It should be obvious that the filter estimate obtained by RTC for this model 
%% complex cell is far noisier than those for model simple cells obtained with
%% RTA. This is largely because we are trying to fit a large model with limited
%% data. I leave it to the user to experiment with increasing the size of the 
%% stimulus set (i.e. to 30000 frames), fitting only the RTC (params.RTAC = [0 1]),
%% including more pairwise statistics (i.e. params.locality = 2), fitting the
%% strf only at the peak delay (i.e. strf = linInit(size(stim,2), [4]) )
%% This problem of model size for RTC will only get worse as the number of pixels
%% in the stimulus increases; so far we have only considered a very small 10X10
%% stimulus, but for real experiments one would probably prefer something larger
